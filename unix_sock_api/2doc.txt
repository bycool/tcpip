第二章 : 传输层：TCP，UDP，SCTP
	2.3 用户数据报协议(UDP):
		一个简单的传输层协议。应用程序往一个UDP套接字写入一个消息，该消息随后被封装到一个UDP数据报，该UDP数据报进而有封装到一个IP数据报，然后发送到目的地。
		UDP不保证UDP数据报会到达其最终目的地，不保证各个数据报的先后顺序跨网络之后保持不变，不保证每个数据报只到达一次。
		UDP传输是缺乏可靠性：1，数据报到达目的地，但校验和检测发现有错误。
							 2，数据报在网络传输中被丢弃，它就无法被投递给UDP套接字，也不会被源端自动重传。
							 3，想要确保一个数据报到达其目的地，可以用程序添加一堆特性，来自对端的确认，本端的超时和重传等。
		可以所UDP提供无连接的服务，因为UDP客户与服务器之间不存在任何长期的联系。
			对于客户UDP套接字，只需要知道目的地地址，不许要知道对端的状态。
			对于服务UDP套接字，只需要接受UDP套接字即可，可以使用一个UDP套接字接受多个客户的UDP数据报。

	2.4 传输控制协议(TCP)：
		TCP提供客户和服务器之间的连接，TCP客户先与某个给定的服务器建立一个连接，在跨该连接与那个服务器交换数据，然后终止这个链接。
			注意：TCP也不能保证数据一定会被对端接受，因为这是不可能办到的，TCP也不能被描述为100%可靠的，它提供可靠的递送或故障的可靠通知。
		RTT(round-trip time):动态估算客户与服务器之间往返时间，该算法便于TCP知道等待一个确认的大概时间。
		TCP通过给其中每个字节关联一个序列号对所发送的数据进行排序。
			比如发送2048字节数据，被分成2个分节，第一个分节发送1~1024字节，第二个分节发送1025~2048字节。如果两个分节最后到达目的地的顺序颠倒，则TCP会根据序号重新排序，在传递给接受的应用程序。如果数据重复，TCP		   可以根据序列号判断数据重复，从而丢弃重复的数据。
		TCP提供流量控制(flow control)：TCP总告知对端在任何时候它一次能够从对端接受到多少字节的数据。这称为通告窗口。该窗口指出接受缓冲区中当前可用的空间量，从而确保发送端发送的数据不会结合搜缓冲区溢出。
		TCP链接是双工的(full-duplex)。这意味着在一个给定的链接上应用可以在任何时刻在进出两个方向上即发送又接收数据。因此TCP必须为每个数据流方向跟踪诸如序列号和窗口大小等状态信息。
							   
